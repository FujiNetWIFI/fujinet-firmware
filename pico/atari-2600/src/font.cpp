#include "cartridge_firmware.h"
#include "font.h"

// Translate ASCII character to local character. Index with ASCII-LOWEST_ASCII_CHAR
const uint16_t __in_flash("xlateAsciiToCharNumber") xlateAsciiToCharNumber[][HIGHEST_ASCII_CHAR - LOWEST_ASCII_CHAR + 1] = {

   {
      // SMALL CAPS

      CH_SPACE, //32 SPACE
      CH_SC_EXCLAIM, //33 !
      CH_QUOTE, //34 "
      CH_HASH, //35 #
      CH_DOLLAR, //36 $
      CH_PERCENT, //37 %
      CH_AMPERSAND, //38 &
      CH_SINGLE_QUOTE, //39 '
      CH_SC_ROUND_OPEN, //40 (
      CH_SC_ROUND_CLOSE, //41 )
      CH_ASTERISK, //42 *
      // 10
      CH_PLUS, //43 +
      CH_COMMA, //44 ,
      CH_MINUS, //45 -
      CH_SC_PERIOD, //46 .
      CH_SLASH, //47 /

      CH_SC_0, //48 0		currently 0-9 unused as each font has its own set
      CH_SC_1, //49 1
      CH_SC_2, //50 2
      CH_SC_3, //51 3
      // 20
      CH_SC_4, //52 4					20
      CH_SC_5, //53 5
      CH_SC_6, //54 6
      CH_SC_7, //55 7
      CH_SC_8, //56 8
      CH_SC_9, //57 9

      CH_SC_COLON, //58 :
      CH_SC_SEMICOLON, //59 ;
      CH_LESS, //60 <
      CH_EQUAL, //61 =
      // 30
      CH_MORE, //62 >					30
      CH_SC_QUESTION, //63 ?
      CH_AT, //64 @

      CH_SC_A, //65 A
      CH_SC_B, //66 B
      CH_SC_C, //67 C
      CH_SC_D, //68 D
      CH_SC_E, //69 E
      CH_SC_F, //70 F
      CH_SC_G, //71 G
      // 40
      CH_SC_H, //72 H
      CH_SC_I, //73 I
      CH_SC_J, //74 J
      CH_SC_K, //75 K
      CH_SC_L, //76 L
      CH_SC_M, //77 M
      CH_SC_N, //78 N
      CH_SC_O, //79 O
      CH_SC_P, //80 P
      CH_SC_Q, //81 Q
      //50
      CH_SC_R, //82 R
      CH_SC_S, //83 S
      CH_SC_T, //84 T
      CH_SC_U, //85 U
      CH_SC_V, //86 V
      CH_SC_W, //87 W
      CH_SC_X, //88 X
      CH_SC_Y, //89 Y
      CH_SC_Z, //90 Z

      CH_SQUARE_OPEN, //91 [
      // 60
      CH_BACKSLASH, //92 BACKSLASH
      CH_SQUARE_CLOSE, //93 ]
      CH_ACCENT, //94 ^
      CH_UNDERSCORE, //95 _
      CH_GRAVE, //96 `

      CH_SC_a, //97 a
      CH_SC_b, //98 b
      CH_SC_c, //99 c
      CH_SC_d, //100 d
      CH_SC_e, //101 e
      // 70
      CH_SC_f, //102 f
      CH_SC_g, //103 g
      CH_SC_h, //104 h
      CH_SC_i, //105 i
      CH_SC_j, //106 j
      CH_SC_k, //107 k
      CH_SC_l, //108 l
      CH_SC_m, //109 m
      CH_SC_n, //110 n
      CH_SC_o, //111 o
      // 80
      CH_SC_p, //112 p
      CH_SC_q, //113 q
      CH_SC_r, //114 r
      CH_SC_s, //115 s
      CH_SC_t, //116 t
      CH_SC_u, //117 u
      CH_SC_v, //118 v
      CH_SC_w, //119 w
      CH_SC_x, //120 x
      CH_SC_y, //121 y
      // 90
      CH_SC_z, //122 z

      CH_CURLY_OPEN, //123 {
      CH_VERTICAL, //124 |
      CH_CURLY_CLOSE, //125 }
      CH_TILDE, //126 ~
      CH_SELECTION, //127 DEL override --> SELECTION

      CH_WIFI_L, // 128
      CH_WIFI_R, // 129
      CH_NO_WIFI_L, // 130
      CH_NO_WIFI_R, // 131
      // 100
      CH_PAGE_L, // 132
      CH_PAGE_R, // 133
      CH_ACCOUNT_L, // 134
      CH_ACCOUNT_R, // 135
      CH_NO_ACCOUNT_L, // 136
      CH_NO_ACCOUNT_R, // 137

      CH_SC_PERIODPERIOD, // 138
      CH_SC_PERIODPERIOD2, // 139

   },

   {
      // TRICHOTOMIC-12

      CH_SPACE, //32 SPACE
      CH_EXCLAIM, //33 !
      CH_QUOTE, //34 "
      CH_HASH, //35 #
      CH_DOLLAR, //36 $
      CH_PERCENT, //37 %
      CH_AMPERSAND, //38 &
      CH_SINGLE_QUOTE, //39 '

      CH_ROUND_OPEN, //40 (
      CH_ROUND_CLOSE, //41 )
      CH_ASTERISK, //42 *
      CH_PLUS, //43 +
      CH_COMMA, //44 ,
      CH_MINUS, //45 -
      CH_PERIOD, //46 .
      CH_SLASH, //47 /

      CH_TRICO_0, //48 0
      CH_TRICO_1, //49 1
      CH_TRICO_2, //50 2
      CH_TRICO_3, //51 3
      CH_TRICO_4, //52 4
      CH_TRICO_5, //53 5
      CH_TRICO_6, //54 6
      CH_TRICO_7, //55 7
      CH_TRICO_8, //56 8
      CH_TRICO_9, //57 9

      CH_COLON, //58 :
      CH_SEMICOLON, //59 ;
      CH_LESS, //60 <
      CH_EQUAL, //61 =
      CH_MORE, //62 >
      CH_QUESTION, //63 ?
      CH_AT, //64 @

      CH_TRICO_A, //65 A
      CH_TRICO_B, //66 B
      CH_TRICO_C, //67 C
      CH_TRICO_D, //68 D
      CH_TRICO_E, //69 E
      CH_TRICO_F, //70 F
      CH_TRICO_G, //71 G
      CH_TRICO_H, //72 H
      CH_TRICO_I, //73 I
      CH_TRICO_J, //74 J
      CH_TRICO_K, //75 K
      CH_TRICO_L, //76 L
      CH_TRICO_M, //77 M
      CH_TRICO_N, //78 N
      CH_TRICO_O, //79 O
      CH_TRICO_P, //80 P
      CH_TRICO_Q, //81 Q
      CH_TRICO_R, //82 R
      CH_TRICO_S, //83 S
      CH_TRICO_T, //84 T
      CH_TRICO_U, //85 U
      CH_TRICO_V, //86 V
      CH_TRICO_W, //87 W
      CH_TRICO_X, //88 X
      CH_TRICO_Y, //89 Y
      CH_TRICO_Z, //90 Z

      CH_SQUARE_OPEN, //91 [
      CH_BACKSLASH, //92 BACKSLASH
      CH_SQUARE_CLOSE, //93 ]
      CH_ACCENT, //94 ^
      CH_UNDERSCORE, //95 _
      CH_GRAVE, //96 `

      CH_TRICO_a, //97 a
      CH_TRICO_b, //98 b
      CH_TRICO_c, //99 c
      CH_TRICO_d, //100 d
      CH_TRICO_e, //101 e
      CH_TRICO_f, //102 f
      CH_TRICO_g, //103 g
      CH_TRICO_h, //104 h
      CH_TRICO_i, //105 i
      CH_TRICO_j, //106 j
      CH_TRICO_k, //107 k
      CH_TRICO_l, //108 l
      CH_TRICO_m, //109 m
      CH_TRICO_n, //110 n
      CH_TRICO_o, //111 o
      CH_TRICO_p, //112 p
      CH_TRICO_q, //113 q
      CH_TRICO_r, //114 r
      CH_TRICO_s, //115 s
      CH_TRICO_t, //116 t
      CH_TRICO_u, //117 u
      CH_TRICO_v, //118 v
      CH_TRICO_w, //119 w
      CH_TRICO_x, //120 x
      CH_TRICO_y, //121 y
      CH_TRICO_z, //122 z

      CH_CURLY_OPEN, //123 {
      CH_VERTICAL, //124 |
      CH_CURLY_CLOSE, //125 }
      CH_TILDE, //126 ~
      CH_SELECTION, //127 DEL override --> SELECTION

      CH_WIFI_L, // 128
      CH_WIFI_R, // 129
      CH_NO_WIFI_L, // 130
      CH_NO_WIFI_R, // 131
      CH_PAGE_L, // 132
      CH_PAGE_R, // 133
      CH_ACCOUNT_L, // 134
      CH_ACCOUNT_R, // 135
      CH_NO_ACCOUNT_L, // 136
      CH_NO_ACCOUNT_R, // 137

      CH_TRICO_PERIODPERIOD, // 138
      CH_TRICO_PERIODPERIOD2, // 139
   },

   {
      // CAPTAIN MORGAN SPICE

      CH_SPACE, //32 SPACE

      CH_MORGAN_Exclamation, //33 !
      CH_MORGAN_Quote, //34 "
      CH_MORGAN_Hash, //35 #
      CH_MORGAN_Dollar, //36 $
      CH_MORGAN_Percent, //37 %
      CH_MORGAN_Ampersand, //38 &
      CH_MORGAN_Apostrophe, //39 '
      CH_MORGAN_RoundOpen, //40 (
      CH_MORGAN_RoundClose, //41 )
      CH_MORGAN_Asterisk, //42 *
      CH_MORGAN_Plus, //43 +
      CH_MORGAN_Comma, //44 ,
      CH_MORGAN_Minus, //45 -
      CH_MORGAN_Period, //46 .
      CH_MORGAN_Slash, //47 /

      CH_MORGAN_0, //48 0
      CH_MORGAN_1, //49 1
      CH_MORGAN_2, //50 2
      CH_MORGAN_3, //51 3
      CH_MORGAN_4, //52 4
      CH_MORGAN_5, //53 5
      CH_MORGAN_6, //54 6
      CH_MORGAN_7, //55 7
      CH_MORGAN_8, //56 8
      CH_MORGAN_9, //57 9

      CH_MORGAN_Colon, //58 :
      CH_MORGAN_SemiColon, //59 ;

      CH_MORGAN_Less, //60 <
      CH_MORGAN_Equal, //61 =
      CH_MORGAN_Greater, //62 >
      CH_MORGAN_Question, //63 ?
      CH_MORGAN_At, //64 @

      CH_MORGAN_A, //65 A
      CH_MORGAN_B, //66 B
      CH_MORGAN_C, //67 C
      CH_MORGAN_D, //68 D
      CH_MORGAN_E, //69 E
      CH_MORGAN_F, //70 F
      CH_MORGAN_G, //71 G
      CH_MORGAN_H, //72 H
      CH_MORGAN_I, //73 I
      CH_MORGAN_J, //74 J
      CH_MORGAN_K, //75 K
      CH_MORGAN_L, //76 L
      CH_MORGAN_M, //77 M
      CH_MORGAN_N, //78 N
      CH_MORGAN_O, //79 O
      CH_MORGAN_P, //80 P
      CH_MORGAN_Q, //81 Q
      CH_MORGAN_R, //82 R
      CH_MORGAN_S, //83 S
      CH_MORGAN_T, //84 T
      CH_MORGAN_U, //85 U
      CH_MORGAN_V, //86 V
      CH_MORGAN_W, //87 W
      CH_MORGAN_X, //88 X
      CH_MORGAN_Y, //89 Y
      CH_MORGAN_Z, //90 Z

      CH_MORGAN_SquareOpen, //91 [
      CH_MORGAN_BackSlash, //92 BACKSLASH
      CH_MORGAN_SquareClose, //93 ]
      CH_MORGAN_Accent, //94 ^
      CH_MORGAN_UnderScore, //95 _
      CH_MORGAN_Grave, //96 `

      CH_MORGAN_a, //97 a
      CH_MORGAN_b, //98 b
      CH_MORGAN_c, //99 c
      CH_MORGAN_d, //100 d
      CH_MORGAN_e, //101 e
      CH_MORGAN_f, //102 f
      CH_MORGAN_g, //103 g
      CH_MORGAN_h, //104 h
      CH_MORGAN_i, //105 i
      CH_MORGAN_j, //106 j
      CH_MORGAN_k, //107 k
      CH_MORGAN_l, //108 l
      CH_MORGAN_m, //109 m
      CH_MORGAN_n, //110 n
      CH_MORGAN_o, //111 o
      CH_MORGAN_p, //112 p
      CH_MORGAN_q, //113 q
      CH_MORGAN_r, //114 r
      CH_MORGAN_s, //115 s
      CH_MORGAN_t, //116 t
      CH_MORGAN_u, //117 u
      CH_MORGAN_v, //118 v
      CH_MORGAN_w, //119 w
      CH_MORGAN_x, //120 x
      CH_MORGAN_y, //121 y
      CH_MORGAN_z, //122 z

      CH_MORGAN_CurlyOpen, //123 {
      CH_MORGAN_Vertical, //124 |
      CH_MORGAN_CurlyClose, //125 }
      CH_MORGAN_Tilde, //126 ~

      CH_SELECTION, //127 DEL override --> SELECTION

      CH_WIFI_L, // 128
      CH_WIFI_R, // 129
      CH_NO_WIFI_L, // 130
      CH_NO_WIFI_R, // 131
      CH_PAGE_L, // 132
      CH_PAGE_R, // 133
      CH_ACCOUNT_L, // 134
      CH_ACCOUNT_R, // 135
      CH_NO_ACCOUNT_L, // 136
      CH_NO_ACCOUNT_R, // 137

      CH_MORGAN_PERIODPERIOD,
      CH_MORGAN_PERIODPERIOD2,

   },

   {
      // GLACIER BELLE

      CH_SPACE, //32 SPACE
      CH_EXCLAIM, //33 !
      CH_QUOTE, //34 "
      CH_HASH, //35 #
      CH_DOLLAR, //36 $
      CH_PERCENT, //37 %
      CH_AMPERSAND, //38 &
      CH_SINGLE_QUOTE, //39 '
      CH_ROUND_OPEN, //40 (
      CH_ROUND_CLOSE, //41 )
      CH_ASTERISK, //42 *
      CH_PLUS, //43 +
      CH_COMMA, //44 ,
      CH_MINUS, //45 -
      CH_PERIOD, //46 .
      CH_SLASH, //47 /

      CH_PELL_0, //48 0
      CH_PELL_1, //49 1
      CH_PELL_2, //50 2
      CH_PELL_3, //51 3
      CH_PELL_4, //52 4
      CH_PELL_5, //53 5
      CH_PELL_6, //54 6
      CH_PELL_7, //55 7
      CH_PELL_8, //56 8
      CH_PELL_9, //57 9

      CH_COLON, //58 :
      CH_SEMICOLON, //59 ;
      CH_LESS, //60 <
      CH_EQUAL, //61 =
      CH_MORE, //62 >
      CH_PELL_QUESTION, //63 ?
      CH_AT, //64 @

      CH_PELL_A, //65 A
      CH_PELL_B, //66 B
      CH_PELL_C, //67 C
      CH_PELL_D, //68 D
      CH_PELL_E, //69 E
      CH_PELL_F, //70 F
      CH_PELL_G, //71 G
      CH_PELL_H, //72 H
      CH_PELL_I, //73 I
      CH_PELL_J, //74 J
      CH_PELL_K, //75 K
      CH_PELL_L, //76 L
      CH_PELL_M, //77 M
      CH_PELL_N, //78 N
      CH_PELL_O, //79 O
      CH_PELL_P, //80 P
      CH_PELL_Q, //81 Q
      CH_PELL_R, //82 R
      CH_PELL_S, //83 S
      CH_PELL_T, //84 T
      CH_PELL_U, //85 U
      CH_PELL_V, //86 V
      CH_PELL_W, //87 W
      CH_PELL_X, //88 X
      CH_PELL_Y, //89 Y
      CH_PELL_Z, //90 Z

      CH_SQUARE_OPEN, //91 [
      CH_BACKSLASH, //92 BACKSLASH
      CH_SQUARE_CLOSE, //93 ]
      CH_ACCENT, //94 ^
      CH_UNDERSCORE, //95 _
      CH_GRAVE, //96 `

      CH_PELL_a, //97 a
      CH_PELL_b, //98 b
      CH_PELL_c, //99 c
      CH_PELL_d, //100 d
      CH_PELL_e, //101 e
      CH_PELL_f, //102 f
      CH_PELL_g, //103 g
      CH_PELL_h, //104 h
      CH_PELL_i, //105 i
      CH_PELL_j, //106 j
      CH_PELL_k, //107 k
      CH_PELL_l, //108 l
      CH_PELL_m, //109 m
      CH_PELL_n, //110 n
      CH_PELL_o, //111 o
      CH_PELL_p, //112 p
      CH_PELL_q, //113 q
      CH_PELL_r, //114 r
      CH_PELL_s, //115 s
      CH_PELL_t, //116 t
      CH_PELL_u, //117 u
      CH_PELL_v, //118 v
      CH_PELL_w, //119 w
      CH_PELL_x, //120 x
      CH_PELL_y, //121 y
      CH_PELL_z, //122 z

      CH_CURLY_OPEN, //123 {
      CH_VERTICAL, //124 |
      CH_CURLY_CLOSE, //125 }
      CH_TILDE, //126 ~
      CH_SELECTION, //127 DEL override --> SELECTION

      CH_WIFI_L, // 128
      CH_WIFI_R, // 129
      CH_NO_WIFI_L, // 130
      CH_NO_WIFI_R, // 131
      CH_PAGE_L, // 132
      CH_PAGE_R, // 133
      CH_ACCOUNT_L, // 134
      CH_ACCOUNT_R, // 135
      CH_NO_ACCOUNT_L, // 136
      CH_NO_ACCOUNT_R, // 137

      CH_PELL_PERIODPERIOD, // 138
      CH_PELL_PERIODPERIOD2, // 139
   },
};

const uint8_t __in_flash("sharedFont") sharedFont[] = {

   // COMMON/SHARED

   0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Blank
   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010, 0b0000, 0b0000 // Exclamation
   , 0b0101, 0b0101, 0b0101, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Quote
   , 0b0001, 0b0001, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0100, 0b0100 // Hash
   , 0b0010, 0b0010, 0b0111, 0b0101, 0b0100, 0b0110, 0b0011, 0b0001, 0b0101, 0b0111, 0b0010, 0b0010 // Dollar
   , 0b0000, 0b0101, 0b0101, 0b0001, 0b0010, 0b0010, 0b0010, 0b0100, 0b0101, 0b0101, 0b0000, 0b0000 // Percent
   , 0b0010, 0b0111, 0b0101, 0b0111, 0b0010, 0b0010, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001 // Ampersand
   , 0b0001, 0b0001, 0b0001, 0b0010, 0b0010, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Apostrophe
   , 0b0001, 0b0001, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0001, 0b0001, 0b0000 // OpenRound
   , 0b0100, 0b0100, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100, 0b0000 // CloseRound

   // 10
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0010, 0b0111, 0b0111, 0b0010, 0b0101, 0b0101, 0b0000, 0b0000 // Asterisk
   , 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 // Plus
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100 // Comma
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Minus
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 // Period
   , 0b0001, 0b0001, 0b0001, 0b0001, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000 // Slash
   , 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 // Colon
   , 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100 // SemiColon
   , 0b0000, 0b0001, 0b0001, 0b0010, 0b0010, 0b0100, 0b0100, 0b0010, 0b0010, 0b0001, 0b0001, 0b0000 // Less
   , 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0000, 0b0000, 0b0111, 0b0111, 0b0000, 0b0000, 0b0000 // Equal
   // 20
   , 0b0000, 0b0100, 0b0100, 0b0010, 0b0010, 0b0001, 0b0001, 0b0010, 0b0010, 0b0100, 0b0100, 0b0000 // Greater
   , 0b0010, 0b0111, 0b0101, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0000 // Question
   , 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0001, 0b0011, 0b0011, 0b0011, 0b0000, 0b0000, 0b0000 // At

   , 0b0011, 0b0011, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0011, 0b0011, 0b0000 // OpenSquare
   , 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0110, 0b0110, 0b0000 // CloseSquare
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0010, 0b0010, 0b0010, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000 // BackSlash
   , 0b0010, 0b0010, 0b0101, 0b0101, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Accent
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0111, 0b0111 // UnderScore
   , 0b0100, 0b0100, 0b0110, 0b0010, 0b0010, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Grave
   , 0b0001, 0b0011, 0b0010, 0b0010, 0b0010, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0011, 0b0001 // OpenCurly
   // 30
   , 0b0100, 0b0110, 0b0010, 0b0010, 0b0010, 0b0011, 0b0011, 0b0010, 0b0010, 0b0010, 0b0110, 0b0100 // CloseCurly
   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 // Vertical
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0001, 0b0111, 0b0111, 0b0100, 0b0000, 0b0000, 0b0000, 0b0000 // Tilde

   , 0b0000, 0b1110, 0b1111, 0b0001, 0b0000, 0b1100, 0b1110, 0b0011, 0b0001, 0b1101, 0b1101, 0b1101 // WiFi L
   , 0b0000, 0b0000, 0b0000, 0b1000, 0b1000, 0b1100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100 // WiFi R
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0011, 0b0011, 0b0000, 0b0000, 0b0011, 0b0011, 0b0011 // No WiFi L
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1000, 0b1000, 0b0100, 0b0100, 0b0100, 0b0100 // No WiFi R
   , 0b0111, 0b0111, 0b0100, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001 // Page L
   , 0b1100, 0b1100, 0b0100, 0b1111, 0b1111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b1111, 0b1111 // Page R
   , 0b0000, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000, 0b0001, 0b0011, 0b0011, 0b0011, 0b0011, 0b0011 // Account L
   // 40
   , 0b1000, 0b1100, 0b1100, 0b1100, 0b1100, 0b1000, 0b0100, 0b0110, 0b1110, 0b1110, 0b1110, 0b1110 // Account R
   , 0b0000, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000, 0b0001, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 // No Account L
   , 0b1000, 0b0100, 0b0100, 0b0100, 0b0100, 0b1000, 0b0100, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 // No Account R

   , 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0111, 0b0111, 0b0111, 0b0111, 0b0000, 0b0000, 0b0000 // Selection

   // SMALL CAPS

   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010 // SC Exclaim
   , 0b0010, 0b0111, 0b0101, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010 // SC Question
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010 // SC Period
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0110, 0b0100 // SC SemiColon
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0000, 0b0000, 0b0010, 0b0010, 0b0000 // SC Colon

   , 0b0001, 0b0001, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0001, 0b0001 // SC OpenRound
   , 0b0100, 0b0100, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100 // SC CloseRound

   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //0
   , 0b0010, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111 //1
   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111 //2
   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0011, 0b0011, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110 //3
   , 0b0100, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001 //4
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110 //5
   // 50
   , 0b0010, 0b0010, 0b0110, 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //6
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100 //7
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0011, 0b0110, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //8
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010 //9

   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     A
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0110, 0b0110, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110 //     B
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0011 //     C
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110 //     D
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111 //     E
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100 //     F
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011 //     G
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     H
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111 //     I
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110 //     J
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101 //     K
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111 //     L
   , 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     M
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     N
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //     O
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100 //     P
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0110, 0b0111, 0b0011 //     Q
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     R
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110 //     S
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 //     T
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //     U
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010 //     V
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101 //     W
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101 //     X
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 //     Y
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111 //     Z

   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101 //     a
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0110, 0b0110, 0b0101, 0b0101, 0b0111, 0b0110 //     b
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0011 //     c
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110 //     d
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111 //     e
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100 //     f
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011 //     g
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101 //     h
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111 //     i
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110 //     j
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101 //     k
   , 0b0000, 0b0000, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111 //     l
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     m
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101 //     n
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //     o
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100 //     p
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0110, 0b0111, 0b0011 //     q
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0111, 0b0110, 0b0101, 0b0101, 0b0101, 0b0101 //     r
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0111, 0b0110 //     s
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 //     t
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010 //     u
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010 //     v
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101 //     w
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101 //     x
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010 //     y
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0001, 0b0001, 0b0010, 0b0010, 0b0100, 0b0100, 0b0111, 0b0111 //     z

   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010  // PeriodPeriod
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1010, 0b1010  // PeriodPeriod2

   // TRICHOTOMIC-12

   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000 //0
   , 0b0010, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //1
   , 0b0110, 0b0111, 0b0101, 0b0001, 0b0001, 0b0011, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111, 0b0000 //2
   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0010, 0b0011, 0b0001, 0b0001, 0b0101, 0b0111, 0b0110, 0b0000 //3
   , 0b0001, 0b0001, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000 //4
   , 0b0111, 0b0111, 0b0100, 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0101, 0b0111, 0b0110, 0b0000 //5
   , 0b0011, 0b0111, 0b0101, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000 //6
   , 0b0111, 0b0111, 0b0101, 0b0001, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //7
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0110, 0b0011, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000 //8
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0111, 0b0110, 0b0000 //9

   , 0b0011, 0b0011, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //A
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000 //B
   , 0b0010, 0b0111, 0b0101, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0101, 0b0111, 0b0011, 0b0000 //C
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000 //D
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0101, 0b0111, 0b0111, 0b0000 //E
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000 //F
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000 //G
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //H
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0000 //I
   , 0b0011, 0b0011, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0101, 0b0111, 0b0110, 0b0000 //J
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //K
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0101, 0b0111, 0b0111, 0b0000 //L
   , 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //M
   , 0b0001, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //N
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000 //O
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0000 //P
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0110, 0b0011, 0b0001 //Q
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //R
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0101, 0b0111, 0b0110, 0b0000 //S
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //T
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0000 //U
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0010, 0b0000 //V
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //W
   , 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //X
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //Y
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b0101, 0b0111, 0b0111, 0b0000 //Z

   , 0b0000, 0b0000, 0b0010, 0b0011, 0b0001, 0b0011, 0b0111, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000 //a
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000 //b
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0011, 0b0000 //c
   , 0b0001, 0b0001, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000 //d
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0111, 0b0011, 0b0000 //e
   , 0b0001, 0b0011, 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //f
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0111, 0b0110 //g
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //h
   , 0b0010, 0b0010, 0b0000, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //i
   , 0b0010, 0b0010, 0b0000, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0110, 0b0100 //j
   , 0b0100, 0b0100, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //k
   , 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //l
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //m
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //n
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000 //o
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100 //p
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0001 //q
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000 //r
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0111, 0b0110, 0b0000 //s
   , 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0011, 0b0001, 0b0000 //t
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000 //u
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0000 //v
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //w
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //x
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0111, 0b0110 //y
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0001, 0b0010, 0b0010, 0b0100, 0b0101, 0b0111, 0b0111, 0b0000 //z

   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000 // PeriodPeriod
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1010, 0b1010, 0b1010, 0b0000 // PeriodPeriod2

   // CAPTAIN MORGAN SPICE

   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000 // MORGAN_Exclamation
   , 0b0101, 0b0101, 0b0101, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Quote
   , 0b0000, 0b0001, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0100, 0b0000 // Hash
   , 0b0010, 0b0010, 0b0111, 0b0111, 0b0100, 0b0110, 0b0011, 0b0001, 0b0111, 0b0111, 0b0010, 0b0010 // Dollar
   , 0b0000, 0b0100, 0b0101, 0b0001, 0b0010, 0b0010, 0b0010, 0b0100, 0b0101, 0b0101, 0b0001, 0b0000 // Percent
   , 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0001, 0b0011, 0b0011, 0b0011, 0b0000, 0b0000, 0b0000 // At
   , 0b0010, 0b0111, 0b0101, 0b0111, 0b0010, 0b0110, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0000 // Ampersand
   , 0b0110, 0b0110, 0b0110, 0b0100, 0b0100, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Apostrophe
   , 0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0110, 0b0010, 0b0011, 0b0001 // RoundOpen
   , 0b0100, 0b0110, 0b0010, 0b0011, 0b0001, 0b0001, 0b0001, 0b0001, 0b0011, 0b0010, 0b0110, 0b0100 // RoundClose
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0010, 0b0111, 0b0111, 0b0010, 0b0101, 0b0101, 0b0000, 0b0000 // Asterisk
   , 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 // Plus
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0100, 0b0100 // Comma
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0111, 0b0000, 0b0000, 0b0000, 0b0000 // Minus
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0000 // Period
   , 0b0001, 0b0001, 0b0001, 0b0001, 0b0010, 0b0010, 0b0010, 0b0010, 0b0100, 0b0100, 0b0100, 0b0100  // Slash
   , 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0000, 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0000 // Colon
   , 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0000, 0b0000, 0b0110, 0b0110, 0b0110, 0b0100, 0b0100 // SemiColon
   , 0b0000, 0b0000, 0b0000, 0b0001, 0b0011, 0b0110, 0b0110, 0b0011, 0b0001, 0b0000, 0b0000, 0b0000 // Less
   , 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0000, 0b0000, 0b0111, 0b0111, 0b0000, 0b0000, 0b0000 // Equal
   , 0b0000, 0b0000, 0b0000, 0b0100, 0b0110, 0b0011, 0b0011, 0b0110, 0b0100, 0b0000, 0b0000, 0b0000 // Greater
   , 0b0010, 0b0111, 0b0101, 0b0001, 0b0001, 0b0011, 0b0011, 0b0010, 0b0000, 0b0010, 0b0010, 0b0000 // Question
   , 0b0011, 0b0011, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0011, 0b0011, 0b0011 // SquareOpen
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0010, 0b0010, 0b0010, 0b0010, 0b0001, 0b0001, 0b0001, 0b0001 // BackSlash
   , 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0110, 0b0110, 0b0110 // SquareClose
   , 0b0010, 0b0010, 0b0101, 0b0101, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Accent
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0111, 0b0111, 0b0111 // UnderScore
   , 0b0100, 0b0100, 0b0110, 0b0010, 0b0010, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000 // Grave
   , 0b0001, 0b0011, 0b0010, 0b0010, 0b0010, 0b0110, 0b0110, 0b0010, 0b0010, 0b0011, 0b0011, 0b0001 // CurlyOpen
   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010 // Vertical
   , 0b0100, 0b0110, 0b0010, 0b0010, 0b0010, 0b0011, 0b0011, 0b0010, 0b0010, 0b0110, 0b0110, 0b0100 // CurlyClose
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0001, 0b0111, 0b0111, 0b0100, 0b0000, 0b0000, 0b0000, 0b0000 // Tilde

   , 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0000 //0
   , 0b0010, 0b0110, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0111, 0b0000 //1
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0111, 0b0111, 0b0100, 0b0111, 0b0111, 0b0111, 0b0000 //2
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0111, 0b0111, 0b0001, 0b0001, 0b0111, 0b0111, 0b0111, 0b0000 //3
   , 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0000 //4
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0111, 0b0111, 0b0001, 0b0001, 0b0111, 0b0111, 0b0111, 0b0000 //5
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0000 //6
   , 0b0111, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000 //7
   , 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0000 //8
   , 0b0111, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0001, 0b0000 //9

   , 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //A
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0110, 0b0111, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0000 //B
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111, 0b0011, 0b0000 //C
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0000 //D
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111, 0b0111, 0b0000 //E
   , 0b0111, 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000 //F
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0011, 0b0000 //G
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //H
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0111, 0b0000 //I

   , 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0111, 0b0111, 0b0110, 0b0000 //J
   , 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //K
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111, 0b0111, 0b0000 //L
   , 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //M
   , 0b0001, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //N
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0000 //O
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0000 //P
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0011, 0b0001 //Q
   , 0b0110, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0101, 0b0101, 0b0101, 0b0000 //R
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0111, 0b0111, 0b0110, 0b0000 //S
   , 0b0111, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //T
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0010, 0b0000 //U
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0010, 0b0010, 0b0000 //V
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //W
   , 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //X
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //Y
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b0111, 0b0111, 0b0111, 0b0000 //Z

   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0001, 0b0011, 0b0111, 0b0101, 0b0111, 0b0111, 0b0011, 0b0000 //a
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0000 //b
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111, 0b0011, 0b0000 //c
   , 0b0001, 0b0001, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0011, 0b0000 //d
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0111, 0b0110, 0b0101, 0b0111, 0b0111, 0b0000 //e
   , 0b0001, 0b0011, 0b0010, 0b0111, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //f
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0101, 0b0111, 0b0111 //g
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //h
   , 0b0010, 0b0010, 0b0000, 0b0110, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //i
   , 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0110, 0b0110, 0b0100 //j
   , 0b0100, 0b0100, 0b0101, 0b0101, 0b0110, 0b0110, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000 //k
   , 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000 //l
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //m
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000 //n
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0000 //o
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0110, 0b0100, 0b0100 //p
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0011, 0b0001, 0b0001 //q
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000 //r
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0110, 0b0011, 0b0001, 0b0111, 0b0111, 0b0110, 0b0000 //s
   , 0b0010, 0b0010, 0b0111, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0011, 0b0011, 0b0001, 0b0000 //t
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0011, 0b0000 //u
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0000 //v
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //w
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000 //x
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0011, 0b0101, 0b0111, 0b0111 //y
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0001, 0b0010, 0b0010, 0b0100, 0b0111, 0b0111, 0b0111, 0b0000 //z

   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1101, 0b1101, 0b1101, 0b0000 // PeriodPeriod
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1011, 0b1011, 0b1011, 0b0000 // PeriodPeriod2

   // Glacier Belle

   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0000, 0b0000 //Question

   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000, 0b0000 //0
   , 0b0010, 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //1
   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0011, 0b0110, 0b0100, 0b0111, 0b0111, 0b0000, 0b0000 //2
   , 0b0110, 0b0111, 0b0001, 0b0001, 0b0010, 0b0011, 0b0001, 0b0001, 0b0111, 0b0110, 0b0000, 0b0000 //3
   , 0b0001, 0b0001, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0000, 0b0000 //4
   , 0b0111, 0b0111, 0b0100, 0b0110, 0b0111, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110, 0b0000, 0b0000 //5
   , 0b0011, 0b0111, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000, 0b0000 //6
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0001, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //7
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0110, 0b0011, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000, 0b0000 //8
   , 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0001, 0b0001, 0b0000, 0b0000 //9

   , 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //A
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0110, 0b0111, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000, 0b0000 //B
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0011, 0b0000, 0b0000 //C
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000, 0b0000 //D
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0111, 0b0111, 0b0000, 0b0000 //E
   , 0b0111, 0b0111, 0b0100, 0b0100, 0b0110, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000, 0b0000 //F
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000, 0b0000 //G
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //H
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0111, 0b0111, 0b0000, 0b0000 //I
   , 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0001, 0b0111, 0b0110, 0b0000, 0b0000 //J
   , 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //K
   , 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0111, 0b0000, 0b0000 //L
   , 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //M
   , 0b0001, 0b0001, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0100, 0b0000, 0b0000 //N
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000, 0b0000 //O
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0000, 0b0000 //P
   , 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0110, 0b0011, 0b0001, 0b0000 //Q
   , 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //R
   , 0b0011, 0b0111, 0b0100, 0b0100, 0b0110, 0b0011, 0b0001, 0b0001, 0b0111, 0b0110, 0b0000, 0b0000 //S
   , 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //T
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000, 0b0000 //U
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0000, 0b0000 //V
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0000, 0b0000 //W
   , 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //X
   , 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //Y
   , 0b0111, 0b0111, 0b0001, 0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b0111, 0b0111, 0b0000, 0b0000 //Z

   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0001, 0b0011, 0b0111, 0b0101, 0b0111, 0b0011, 0b0000, 0b0000 //a
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0000, 0b0000 //b
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111, 0b0011, 0b0000, 0b0000 //c
   , 0b0001, 0b0001, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000, 0b0000 //d
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0111, 0b0110, 0b0100, 0b0111, 0b0011, 0b0000, 0b0000 //e
   , 0b0001, 0b0011, 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //f
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0111, 0b0110 //g
   , 0b0100, 0b0100, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //h
   , 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //i
   , 0b0010, 0b0010, 0b0000, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0110, 0b0100 //j
   , 0b0100, 0b0100, 0b0101, 0b0101, 0b0111, 0b0110, 0b0110, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //k
   , 0b0110, 0b0110, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 //l
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //m
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0000, 0b0000 //n
   , 0b0000, 0b0000, 0b0010, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0000, 0b0000 //o
   , 0b0000, 0b0000, 0b0110, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100 //p
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0001 //q
   , 0b0000, 0b0000, 0b0101, 0b0111, 0b0110, 0b0100, 0b0100, 0b0100, 0b0100, 0b0100, 0b0000, 0b0000 //r
   , 0b0000, 0b0000, 0b0011, 0b0111, 0b0100, 0b0110, 0b0011, 0b0001, 0b0111, 0b0110, 0b0000, 0b0000 //s
   , 0b0010, 0b0010, 0b0111, 0b0111, 0b0010, 0b0010, 0b0010, 0b0010, 0b0011, 0b0001, 0b0000, 0b0000 //t
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0000, 0b0000 //u
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0000, 0b0000 //v
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0111, 0b0111, 0b0101, 0b0000, 0b0000 //w
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0111, 0b0010, 0b0010, 0b0111, 0b0101, 0b0101, 0b0000, 0b0000 //x
   , 0b0000, 0b0000, 0b0101, 0b0101, 0b0101, 0b0101, 0b0101, 0b0111, 0b0011, 0b0001, 0b0111, 0b0110 //y
   , 0b0000, 0b0000, 0b0111, 0b0111, 0b0001, 0b0010, 0b0010, 0b0100, 0b0111, 0b0111, 0b0000, 0b0000 //z

   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0010, 0b0010, 0b0010, 0b0000, 0b0000 // PeriodPeriod
   , 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b1010, 0b1010, 0b1010, 0b0000, 0b0000 // PeriodPeriod2
};

uint16_t convertAsciiToCharnum(uint8_t font, uint8_t ascii) {
   return xlateAsciiToCharNumber[font][ascii - LOWEST_ASCII_CHAR];
}
