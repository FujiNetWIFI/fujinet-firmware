; DO NOT EDIT THE FILE - IT WILL BE OVERWRITTEN BY REPOSITORY UPDATES
;
; PUT YOUR LOCAL CHANGES IN platformio.local.ini


;FujiNet PlatformIO Common Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[fujinet]
esp32_platform_version = 6.3.2
esp32_platform_packages = 

; SPIFFS/LITTLEFS
flash_filesystem = FLASH_SPIFFS 

[platformio]
description = FujiNet retro computer to ESP32 WiFi Multifunction Firmware
default_envs = ${fujinet.build_board}
data_dir = /$PROJECT_DIR/data/${fujinet.build_platform}

[env]
framework = espidf
extra_scripts =
    pre:build_packages.py
    pre:build_version.py
    pre:build_webui.py
;    post:build_firmwarezip.py ; Optional, build firmware ZIP file for flash tool
lib_ldf_mode = deep+

; COM1, /dev/ttyUSB0, /dev/tty.SLAB_USBtoUART etc.
upload_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0

upload_speed = 460800
monitor_speed = 460800

monitor_filters = esp32_exception_decoder, time
check_skip_packages = yes

build_flags =
    -D ${fujinet.build_platform}
    -D ${fujinet.flash_filesystem}
    -D CMAKE_EXPORT_COMPILE_COMMANDS=ON
    -D DEBUG_SPEED=${env.monitor_speed}

# [fujinet] section allowed values.
# copy one of the build_board values to your platformio.local.ini under [fujinet], or read the build-sh.md docs.

;build_platform = BUILD_ATARI
;build_bus      = SIO
;build_board    = fujinet-atari-v1       ; FujiNet for Atari v1.0 and up
;build_board    = fujinet-v1-8mb         ; Atari generic/custom with 8mb flash
;build_board    = fujinet-v1-4mb         ; Atari generic/custom with 4mb flash

;build_platform = BUILD_ADAM
;build_bus      = ADAMNET
;build_board    = fujinet-adam-v1       ; FujiNet for Coleco ADAM v1.0

;build_platform = BUILD_APPLE
;build_bus      = IWM
;build_board    = fujiapple-rev0         ; FujiApple Rev 0 Prototype
;build_board    = fujiapple-fujinetv1   ; FujiApple using Atari FujiNet v1.0

;build_platform = BUILD_MAC
;build_bus      = MAC
;build_board    = fujimac-rev0         ; Use FujiApple Rev 0 Prototype for Mac 68000

;build_platform = BUILD_IEC
;build_bus      = IEC
;build_board    = fujinet-iec            ; Commodore IEC using Atari FujiNet
;build_board    = fujiloaf-rev0          ; Commodore IEC FujiLoaf Rev0 Prototype
;build_board    = fujiapple-iec          ; Commodore IEC using FujiApple Rev0
;build_board    = fujinet-iec-lolin-d32  ; Commodore IEC using Lolin D32 Pro
;build_board    = fujinet-iec-nugget     ; Commodore IEC using Lolin D32 Pro "Nugget"

;build_platform = BUILD_LYNX
;build_bus      = comlynx
;build_board    = fujinet-lynx-prototype ; Lynx Prototype PCB
;build_board    = fujinet-lynx-devkitc   ; Lynx with basic DEVKITC

;build_platform = BUILD_S100
;build_bus      = s100Bus
;build_board    = fujinet-s100-v1-8mb    ; ESP32-DEVKITC-VE

;build_platform = BUILD_RS232
;build_bus      = rs232
;build_board    = fujinet-rs232-rev0      ; RS232 Rev0 Prototype Carrier

;build_platform   = BUILD_CX16
;build_bus        = cx16
;build_board      = fujinet-cx16

;build_platform = BUILD_RC2014
;build_bus      = rc2014spi
;build_board    = fujinet-rc2014spi-rev0   ; RC2014 prototype based on ESP32-DEVKITC-VE

;build_platform = BUILD_H89
;build_bus      = H89
;build_board    = fujinet-heathkit-h89

;build_platform = BUILD_COCO
;build_bus      = DRIVEWIRE
;build_board    = fujinet-coco-devkitc      ; Color Computer Drivewire using ESP32-DEVKITC-VE
;build_board    = fujinet-coco-lolin-d32-dw ; Color Computer Drivewire using Lolin D32 Pro
