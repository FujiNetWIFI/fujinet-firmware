#                          __  __            _
#                       ___\ \/ /_ __   __ _| |_
#                      / _ \\  /| '_ \ / _` | __|
#                     |  __//  \| |_) | (_| | |_
#                      \___/_/\_\ .__/ \__,_|\__|
#                               |_| XML parser
#
# Copyright (c) 2021-2022 Sebastian Pipping <sebastian@pipping.org>
# Licensed under the MIT license:
#
# Permission is  hereby granted,  free of charge,  to any  person obtaining
# a  copy  of  this  software   and  associated  documentation  files  (the
# "Software"),  to  deal in  the  Software  without restriction,  including
# without  limitation the  rights  to use,  copy,  modify, merge,  publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit
# persons  to whom  the Software  is  furnished to  do so,  subject to  the
# following conditions:
#
# The above copyright  notice and this permission notice  shall be included
# in all copies or substantial portions of the Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY  OF  ANY  KIND,
# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
# USE OR OTHER DEALINGS IN THE SOFTWARE.

name: Collect test coverage

on:
  pull_request:
  push:
  schedule:
    - cron: '0 2 * * 5'  # Every Friday at 2am

jobs:
  checks:
    name: Collect test coverage
    runs-on: ubuntu-22.04
    env:
      CFLAGS: -g3 -pipe
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Install build dependencies
      run: |-
        set -x -u -o pipefail
        source /etc/os-release

        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends -V \
            cmake \
            docbook2x \
            dos2unix \
            gcc-multilib \
            g++-multilib \
            lcov \
            libbsd-dev \
            lzip \
            moreutils

        # Get rid of packages installed from ppa:ondrej/php so that we will be able to install wine32:i386 without conflicts
        # (see issue https://github.com/actions/virtual-environments/issues/4589)
        # In detail we:
        #   1. Remove all packages that ppa:ondrej/php has but plain Ubuntu doesn't, e.g. everything PHP
        #   2. Revert (remaining) packages that ppa:ondrej/php and plain Ubuntu share, back to the plain Ubuntu version
        #   3. Assert that no packages from ppa:ondrej/php are left installed
        dpkg -l | grep '^ii' | grep -F deb.sury.org | awk '{print $2}' | grep '^php' \
          | xargs -r -t sudo apt-get remove --yes libpcre2-posix3 libzip4
        dpkg -l | grep '^ii' | grep -F deb.sury.org | awk '{print $2}' | sed "s,\$,/${UBUNTU_CODENAME}," \
          | xargs -r -t sudo apt-get install --yes --no-install-recommends --allow-downgrades -V
        ! dpkg -l | grep '^ii' | grep -F deb.sury.org

        # Install 32bit Wine
        sudo dpkg --add-architecture i386  # for wine32
        sudo apt-get update  # due to new architecture
        sudo apt-get install --yes --no-install-recommends -V \
            mingw-w64 \
            wine-stable \
            wine32:i386
    - name: Unshallow Git clone
      run: |
        git fetch --force --tags --unshallow origin  # for "git describe" in coverage.sh
    - name: Collect test coverage
      env:
        MODE: coverage-sh
        TRAVIS_OS_NAME: linux
      run: |
        exec ./.travis.sh

    - name: Store coverage .info and HTML report
      uses: actions/upload-artifact@v3.1.1
      with:
        name: coverage
        path: expat/coverage__*/
        if-no-files-found: error
